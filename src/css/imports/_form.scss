/* 
 *
 * Content
 * 
 * Form
 *  - Text input field
 */

@import "_variables";

:root {
  --form-element-width: 25rem;
  --form-element-leading: 1rem;
  --form-max-width: 25rem;
}

input[type="text"],
input[type="tel"],
input[type="email"],
input[type="password"] {
  text-decoration: none;
  padding-left: 1rem;
  padding-right: 1rem;
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;

  font-family: var(--typeface-body);
  font-size: var(--type-size-body);
  /* letter-spacing: var(--type-tracking-button); */

  border: none;
  border-bottom: 2px solid var(--color-primary-dark);

  /* border-radius: 0.25em; */
  @if ($useRoundedCorner==true) {
    border-top-right-radius: 0.25rem;
    border-top-left-radius: 0.25rem;
  } @else {
    border-radius: 0rem;
  }

  background-color: var(--color-primary-lighter);

  transition-property: box-shadow, background-color, border;
  transition-duration: 0.2s;
  transition-timing-function: cubic-bezier(0.075, 0.82, 0.165, 1);
}

input[type="text"]:focus,
input[type="tel"]:focus,
input[type="email"]:focus,
input[type="password"]:focus {
  outline: none;
  border-color: var(--color-darker);
  background-color: #fafafa;
}

label {
  font-family: var(--typeface-body);
  font-size: 14px;
}

/* 
 * 
 */
input[type="text"].error,
input[type="tel"].error,
input[type="email"].error,
input[type="password"].error {
  border-color: var(--color-accent);
  color: var(--color-accent);
}

.error {
  color: var(--color-accent) !important;
}

input.--dark {
  background-color: rgba(255, 255, 255, 0.1);
  color: var(--color-accent-lightest);
  border-color: var(--color-primary-lightest);

  &:focus {
    background-color: rgba(255, 255, 255, 0.15);
    color: var(--color-accent-lightest);
  }
}

/* 
 * form layout
 */
.field {
  display: flex;
  flex-direction: column;
  /* margin-bottom: 1rem; */
  margin-bottom: 1.5rem;
  /* define a constraining width for a field */
  max-width: var(--form-element-width);
  width: 100%;
}

.field__assist,
.field > span {
  font-family: var(--typeface-caption);
  font-size: 12px;
  opacity: 0;
  margin-left: 1rem;
}

/* interactive element group without label */
.form-controls {
  margin-top: 3rem;
}

.form-controls > * {
  /* when width is too short */
  margin-bottom: 1rem;
}

form,
.form {
  max-width: var(--form-max-width);
  margin: 2rem 0 2rem;
}

.copyable-field {
  display: block;
  position: relative;

  // remove the border from text

  &__copyText {
    @extend input[type="text"];
    border-bottom: none;
    // border: 2px solid transparent;

    margin-bottom: 0rem;

    display: block;
    // clip or "hide" the field's text thats outside the container
    overflow-x: auto;
    // make the text stay on one line
    white-space: nowrap;
  }

  &__button {
    // make it stick to the right side of the control
    position: absolute;
    top: 0rem;
    right: 0rem;

    background-color: var(--color-primary-lighter);
    // position the button at the center
    padding: 0.75rem 0.75rem;
    border: none;

    &:active {
      color: #888;
    }
  }
}

.hint-popup {
  position: absolute;
  top: -4rem;
  right: 0;

  background: var(--color-primary-darkest);
  color: var(--color-primary-lightest);
  box-shadow: var(--drop-shadow-dark);
  padding: 0.75rem 0.75rem;

  animation-timing-function: cubic-bezier(0.16, 1, 0.3, 1); // ease out expo
  animation-name: hint-popup-animation--enter, hint-popup-animation--exit;
  animation-delay: 0ms, 1000ms;
  animation-duration: 300ms, 300ms;
  animation-fill-mode: forwards;
}

@keyframes hint-popup-animation--enter {
  0% {
    opacity: 0;
    transform: translateY(30%);
  }

  100% {
    opacity: 1;
    transform: translateY(0%);
  }
}

@keyframes hint-popup-animation--exit {
  0% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

// utility class for stretching element
.form-width-stretch {
  width: 100%;
}
